version: 2
jobs:
  build:
    working_directory: ~/build_workspace
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run:
            name: Greeting
            command: echo ${BRANCH_NAME}
      - run:
            name: Current Branch
            command: echo Hello, One;date;whoami;pwd;uname -a
      - run:
            mkdir -p my_workspace
      - run: echo "Match my workspaces" > my_workspace/demo;chmod 775 my_workspace/demo;pwd;ls -latr; ls -latr ./my_workspace;cat ./my_workspace/demo
      - persist_to_workspace:
            root: ~/build_workspace/my_workspace
            paths:
                - demo
  T1:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run: echo "Parallel Job1"
  T2:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run: echo "Parallel Job2"
  T3:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run: echo "Parallel Job3"
  deploy:
    working_directory: ~/deploy_workspace
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run:
            name: Greeting
            command: echo Hello, Two;date;whoami;pwd;uname -a;ls -latr
      - attach_workspace:
            at: my_workspace
      - run: 
            name: Do ls -latr after archiving workspace
            command: ls -latr
      - run: |
          if [[ `cat my_workspace/demo` == "Match my workspaces" ]]; then
            echo "It Worked!";
          else
            echo "Nope!"; exit 1
          fi

workflows:
    version: 2
    one_and_two:
        jobs:
          - build:
                filters:
                    branches:
                        only: ${BRANCH_NAME}
          - T1:
                requires:
                    - build
                filters:
                    branches:
                        only: ${BRANCH_NAME}
          - T2:
                requires:
                    - build
                filters:
                    branches:
                        only: ${BRANCH_NAME}
          - T3:
                requires:
                  - T1
                  - T2
                filters:
                    branches:
                        only: ${BRANCH_NAME}
          - deploy:
                requires:
                  - build
                  - T1
                  - T2
                  - T3
                filters:
                    branches:
                        only: ${BRANCH_NAME}
